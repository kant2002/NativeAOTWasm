<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <WasmHasCanvas>false</WasmHasCanvas>
    <PublishAot>true</PublishAot>
    <EmccExtraArgs>--js-library &quot;$(MSBuildThisFileDirectory)js_exports.js&quot;</EmccExtraArgs>
  </PropertyGroup>

  <!-- That's customization which I want that SDK have. -->
  <PropertyGroup>
    <!-- <WasmHasCanvas Condition="'$(WasmHasCanvas)' == ''">true</WasmHasCanvas> -->
    <WasmHtmlTemplate Condition="'$(WasmHasCanvas)' == 'true'">shell-file.html</WasmHtmlTemplate>
    <WasmHtmlTemplate Condition="'$(WasmHasCanvas)' != 'true'">shell-file-no-canvas.html</WasmHtmlTemplate>
    <!-- Enable full screen mode. -->
    <EmccExtraArgs Condition="'$(WasmHasCanvas)' == 'true'">$(EmccExtraArgs) -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=$Browser</EmccExtraArgs>
  </PropertyGroup>

  <ItemGroup>
    <EmccJsLibraryFile Include="js_exports.js" />
  </ItemGroup>

  <!-- This may be part of ILCompiler.LLVM package -->
  <ItemGroup>
    <LinkerArg1 Include="@(EmccJsLibraryFile->'--js-library %(Identity)')" />
    <LinkerArg1 Condition="'$(WasmHasCanvas)' == 'true'" Include="-sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=$Browser" />
  </ItemGroup>

	<ItemGroup>
      <!-- Update ILCompiler pack is required since https://github.com/dotnet/sdk/blob/571d48c039a15ab085156cc2d18412aba7638639/src/Tasks/Microsoft.NET.Build.Tasks/ProcessFrameworkReferences.cs#L613-L618 
          contains implicit assumptions that each TFM can have just one ILC pack.
          Because _GenerateRestoreGraphProjectEntry which decide what ILC pack to use used ExcludeRestorePackageImports=true
          There nothing I can do except have KnownILCompilerPack updated in project file. 
           -->
      <KnownILCompilerPack Update="Microsoft.DotNet.ILCompiler"
                         TargetFramework="net7.0"
                         ILCompilerPackNamePattern="runtime.**RID**.Microsoft.DotNet.ILCompiler.LLVM"
                         ILCompilerPackVersion="8.0.0-alpha.1.23172.3"
                         ILCompilerRuntimeIdentifiers="browser-wasm;linux-musl-x64;linux-x64;win-x64;linux-arm;linux-arm64;linux-musl-arm;linux-musl-arm64;osx-arm64;osx-x64;win-arm;win-arm64;win-x86"
                         />
		<PackageReference Include="Microsoft.DotNet.ILCompiler.LLVM" Version="8.0.0-alpha.1.23172.3" />
		<!-- <PackageReference Include="runtime.win-x64.Microsoft.DotNet.ILCompiler.LLVM" Version="8.0.0-alpha.1.23172.3" /> -->
	</ItemGroup>

</Project>
